using AmirCalendar;
using MesbahComponent;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;

namespace ClinicMesbah
{
    public partial class Calender : Form
    {
        string CalenderFor = "";
        Color color;
        int SID;
        DataTable ShiftDt = new DataTable(); DataTable weeklyDt = new DataTable();
        DataAccess da = new DataAccess();
        public Calender(int SectionID)
        {
            InitializeComponent();
            SID = SectionID;
        }
        public class ComboboxItem
        {
            public string Text { get; set; }
            public object Value { get; set; }

            public override string ToString()
            {
                return Text;
            }
        }
        private void Calender_Load(object sender, EventArgs e)
        {
            FarsiDate f = new FarsiDate();
            //lastInterm
            SqlParameter[] param;
            param = new SqlParameter[1];
            int index = 0;
            param[index++] = new SqlParameter("@SectionID", SID);
            f.FarsiSelectedDate= FarsiDateHelper.GetLongFarsiDate(Convert.ToDateTime(da.ExecuteSP("GetLast", param).Tables[0].Rows[0][0])) ;
            
            CalenderFor = string.Format("این برنامه از تاریخ :" + "{0}/{1}/{2}}", f.FarsiYear, (f.FarsiMonth + 1), f.FarsiDay + "اعمال می شود.");
         f.FarsiSelectedDate = CalenderFor;
            farsiCalendar1.Value = f;
          // farsiCalendar1.
           // lblMonth.Text =  datePicker.Value.FarsiSelectedDate.Split('/')[1] .Value.FarsiSelectedDate.Split('/')[1].
            fillcmb();
            fillcolor();
            pnlHoliday.Location = pnlWeeklyHour.Location;
            pnlHoliday.Visible = false;
            fillGrid();
        }

        private void fillGrid()
        {
            SqlParameter[] param;
            param = new SqlParameter[1];
            int index = 0;
           
            param[index++] = new SqlParameter("@SectionID", SID    );

            DataGridView.AutoGenerateColumns = false;
            weeklyDt = da.ExecuteSP("GetWeeklyPlan", param).Tables[0];
            DataGridView.DataSource = weeklyDt;

        }

        private void fillcolor()
        {
             color = Properties.Settings.Default.Color;
            Properties.Settings.Default.Color = color;
            //   Properties.Settings.Default.GridText = dataGridView1.Rows[0].Cells[0].Value.ToString();


            // Color C = Properties.Settings.Default.myColor;

            menuStrip1.BackColor = color;
            MenuItem2ToolStripMenuItem.BackColor = color;
 
            btnAdd2.BackColor = color;
            btnNew.BackColor = color;
        
 
            btnAdd2.BackColor = color;

            btnNew.BackColor = color;
            menuStrip1.BackColor = color;
            btnNew.BackColor = color;
            btnAdd2.BackColor = color;
            DataGridView.ColumnHeadersDefaultCellStyle.BackColor = color;
            DataGridView.RowsDefaultCellStyle.SelectionBackColor = ControlPaint.LightLight(color);
            DataGridView.AlternatingRowsDefaultCellStyle.BackColor = ControlPaint.LightLight(ControlPaint.LightLight(ControlPaint.LightLight(ControlPaint.LightLight(color))));
    
 
            this.Size = new Size(this.Size.Width, 450);
            pnlWeeklyHour.Visible = true;
            pnlWeeklyHour.Location = pnlHoliday.Location;
            this.Size = new Size(this.Size.Width, 450);
        }

        private void fillcmb()
        {
            Dictionary<string, int> Day = new Dictionary<string, int>();
            Day.Add("شنبه",7);
            Day.Add("یکشنبه",1);
            Day.Add("دوشنبه",2);
            Day.Add("سه شنبه",3);
            Day.Add("چهارشنبه",4);
            Day.Add("پنج شنبه",5);
            Day.Add("جمعه",6);

                                            cmbDayOfWeek.DataSource = new BindingSource(Day, null);
                                            cmbDayOfWeek.DisplayMember = "Key";
                                             cmbDayOfWeek.ValueMember = "Value";
//shiftcombobox
                                            ShiftDt = da.ExecuteCommand("GetShift").Tables[0];
                                            foreach (DataRow dr in ShiftDt.Rows)
                                            {   
                                                //ComboboxItem item = new ComboboxItem();
                                                //item.Text =(dr["ShiftName"]).ToString();
                                                //item.Value = Convert.ToInt32( dr["ID"]);
                                                //cmbShift.Items.Add(item);
                                               
                                            }
                                            cmbShift.DataSource = ShiftDt;
                                            cmbShift.DisplayMember = ShiftDt.Columns[1].ToString();
                                            cmbShift.ValueMember =  ( ShiftDt.Columns[2].ToString() );

                                }

        private void txtShift_TextChanged(object sender, EventArgs e)
        {

        }

        private void MenuItem1ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            pnlWeeklyHour.Visible = true;
            pnlHoliday.Visible = false;
        }

        private void MenuItem2ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            pnlWeeklyHour.Visible = false;
            pnlHoliday.Visible = true;
        }

        private void pnlDailyHour_Paint(object sender, PaintEventArgs e)
        {


        }

        private void farsiCalendar1_DateChanged(object sender, AmirCalendar.FarsiDatePickerEventArgs e)
        {

        }

        private void farsiCalendar2_DateChanged(object sender, AmirCalendar.FarsiDatePickerEventArgs e)
        {
           
            var datePicker = (FarsiCalendar)sender;
            var mes = string.Format("Old FarsiDate: {0}New FarsiDate: {1}DatePicker Format: {2}Persian SelectedDate: {3}Gregorian SelectedDate: {4}" +
                                    "Number Of Days In Persian SelectedMonth: {5}Persian Year: {6}Persian Month: {7}Persian Day: {8}Persian selectedDate In Long Format: {9}Is Holiday: {10}",
                                    e.OldFarsiDate + Environment.NewLine,
                                    e.NewFarsiDate + Environment.NewLine,
                                    datePicker.Value.Format + Environment.NewLine,
                                    datePicker.Value.FarsiSelectedDate + Environment.NewLine,
                                    datePicker.Value.GregorianSelectedDate.ToShortDateString() + Environment.NewLine,
                                    datePicker.Value.NumberOfDaysInFarsiSelectedMonth + Environment.NewLine,
                                    datePicker.Value.FarsiYear + Environment.NewLine,
                                    datePicker.Value.FarsiMonth + Environment.NewLine,
                                    datePicker.Value.FarsiDay + Environment.NewLine,
                                    FarsiDateHelper.GetLongFarsiDate(datePicker.Value.GregorianSelectedDate) + Environment.NewLine,
                                    FarsiDateHelper.IsHolidayFarsiDate(datePicker.Value.FarsiSelectedDate) ? "تعطیل" : "غیر تعطیل");
         
            MessageForm.Show(mes,"k",MessageFormIcons.Error,MessageFormButtons.YesNo,Color.Red);
        }

        private void txtStartSobh_TextChanged(object sender, EventArgs e)
        {
            txtStartSobh.MaxLength = 5;
            DeleteChars();
            if (txtStartSobh.Text.Length == 1)
                if (Convert.ToInt32(txtStartSobh.Text) > 2)
                { SendKeys.Send("{BACKSPACE}"); return; }
                else if (txtStartSobh.Text.Length == 2)
                    if (Convert.ToInt32(txtStartSobh.Text) > 24)
                    { SendKeys.Send("{BACKSPACE}"); return; }
            if (txtStartSobh.Text.Length == 2)
                txtStartSobh.Text += ":";

            txtStartSobh.SelectionStart = txtStartSobh.Text.Length;
        }
        private void DeleteChars()
        {

            if (!txtStartSobh.Text.EndsWith("0") && !txtStartSobh.Text.EndsWith("1") && !txtStartSobh.Text.EndsWith("2") && !txtStartSobh.Text.EndsWith("3") && !txtStartSobh.Text.EndsWith("4") && !txtStartSobh.Text.EndsWith("5") && !txtStartSobh.Text.EndsWith("6") && !txtStartSobh.Text.EndsWith("7") && !txtStartSobh.Text.EndsWith("8") && !txtStartSobh.Text.EndsWith("9") && !txtStartSobh.Text.EndsWith(":"))

                SendKeys.Send("{BACKSPACE}");

        }

        private void txtEndSobh_TextChanged(object sender, EventArgs e)
        {
            txtEndSobh.MaxLength = 5;
            DeleteChars();
            if (txtEndSobh.Text.Length == 1)
                if (Convert.ToInt32(txtEndSobh.Text) > 2)
                { SendKeys.Send("{BACKSPACE}"); return; }
                else if (txtEndSobh.Text.Length == 2)
                    if (Convert.ToInt32(txtEndSobh.Text) > 24)
                    { SendKeys.Send("{BACKSPACE}"); return; }
            if (txtEndSobh.Text.Length == 2)
                txtEndSobh.Text += ":";

            txtEndSobh.SelectionStart = txtEndSobh.Text.Length;
        }

        private void btnAdd2_Click(object sender, EventArgs e)
        {  SqlParameter[] param;
            param = new SqlParameter[7];
           int index=0;
                da.ExecuteScalarSP("SetDep", param);
            if(DataGridView.SelectedRows.Count==0) 
            {//new
                 param[index++] = new SqlParameter("@ID",Convert.ToInt32( 0));

            }
            else
            {//update
                 param[index++] = new SqlParameter("@ID", (Convert.ToInt32(DataGridView.Rows[DataGridView.SelectedRows[0].Index].Cells[0].Value)));

            }
            param[index++] = new SqlParameter("@Active", !chEnabled.Checked);
           
            param[index++] = new SqlParameter("@DayOfWeek",   Convert.ToInt32(cmbDayOfWeek.SelectedValue));
             param[index++] = new SqlParameter("@StartTime", (Convert.ToDateTime(txtStartSobh.Text)).TimeOfDay);
             param[index++] = new SqlParameter("@EndTime",  (Convert.ToDateTime(txtEndSobh.Text)).TimeOfDay);
            //   param[index++] = new SqlParameter("@Active", !chActive.Checked);
            param[index++] = new SqlParameter("@ShiftID",(int)((DataRowView)( cmbShift.SelectedItem))[0]);
            param[index++] = new SqlParameter("@SectionID", SID);
            if (Convert.ToInt32(da.ExecuteScalarSP("SetShift", param)) == 1)
            { MessageBox.Show("ثبت با موفقیت انجام شد."); fillGrid(); cmbDayOfWeek.Enabled = false; cmbShift.Enabled = false; }
            else MessageBox.Show("در روند ثبت خطایی رخ داده است.");
        }

        private void cmbShift_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (cmbShift.SelectedIndex != -1)
            {
                if (DataGridView.SelectedRows.Count == 0)
                    foreach (DataRow dr in ShiftDt.Rows)
                    {

                        if ((int)dr[0]  ==  (int)((DataRowView)( cmbShift.SelectedItem))[0])
                        {
                            // string s = dr[0].ToString();
                            txtEndSobh.Text = dr[3].ToString();
                            txtStartSobh.Text = dr[2].ToString();
                        }
                    }
            }
            else
            {
                txtEndSobh.Text = "";
                txtStartSobh.Text = "";
            }
        }

        private void DataGridView_SelectionChanged(object sender, EventArgs e)
        {

            if (DataGridView.SelectedRows.Count != 0)
            {
                
                int index = DataGridView.SelectedRows[0].Index;
                chEnabled.Checked = !Convert.ToBoolean(DataGridView.Rows[index].Cells[3].Value);
                //txtStartTime.Text = DataGridView.Rows[index].Cells[2].Value.ToString();
                txtEndSobh.Text = DataGridView.Rows[index].Cells[5].Value.ToString();
                txtStartSobh.Text = DataGridView.Rows[index].Cells[4].Value.ToString();
                cmbShift.SelectedIndex = cmbShift.FindStringExact(DataGridView.Rows[index].Cells[2].Value.ToString());
                foreach (DataRowView row in cmbShift.Items)
                    if (Convert.ToInt32(row[0]) == Convert.ToInt32(DataGridView.Rows[index].Cells[6].Value))
                        cmbShift.SelectedItem = row;
                cmbDayOfWeek.SelectedIndex = cmbDayOfWeek.FindStringExact(DataGridView.Rows[index].Cells[1].Value.ToString());
              
            }
        }

        private void button1_Click(object sender, EventArgs e)
        {
            DataGridView.ClearSelection();
            cmbShift.SelectedIndex = -1;
            cmbShift.Enabled = true;
            cmbDayOfWeek.Enabled = true;
        }

        private void chEnabled_CheckStateChanged(object sender, EventArgs e)
        {
            txtEndSobh.Enabled = txtStartSobh.Enabled = !chEnabled.Checked;
        }

        private void farsiCalendar1_DateChanged_1(object sender, FarsiDatePickerEventArgs e)
        {
            var datePicker = (FarsiCalendar)sender;
           
              SqlParameter[] param;
            param = new SqlParameter[2];
            int index = 0; 
            param[index++] = new SqlParameter("@Month", datePicker.Value.FarsiSelectedDate.Split('/')[1] );
            param[index++] = new SqlParameter("@Day", datePicker.Value.FarsiSelectedDate.Split('/')[2]) ;

          
           bool IsHoliday=  Convert.ToBoolean( da.ExecuteSP("GetHolidays", param).Tables[0].Rows[0][0]);
     
           
            var mes = string.Format("روز:"+"{0}" +
                                     " {1}",
                                   
                                 //   e.NewFarsiDate + Environment.NewLine,
                                  
                                    datePicker.Value.FarsiSelectedDate + Environment.NewLine,
                                  //  datePicker.Value.GregorianSelectedDate.ToShortDateString() + Environment.NewLine,
                                    //datePicker.Value.NumberOfDaysInFarsiSelectedMonth + Environment.NewLine,
                                     FarsiDateHelper.GetLongFarsiDate(datePicker.Value.GregorianSelectedDate)  ,
                                   IsHoliday? "این روز تعطیل است. آیا غیر تعطیل باشد؟" : "این روز غیرتعطیل است. آیا تعطیل باشد؟");

            if (!IsHoliday)
            {
                SqlParameter[] p ;
                p  = new SqlParameter[2];
                int i  = 0;
                p[i++] = new SqlParameter("@DayOfWeek",( FarsiDateHelper.DayOfWeeknum(datePicker.Value.GregorianSelectedDate) ));
                p [i ++] = new SqlParameter("@DepID", SID);

            int z= (int)(datePicker.Value.GregorianSelectedDate.DayOfWeek);
                DataTable shifts = da.ExecuteSP("checkForHolidays", p ).Tables[0];
                var mess = "";
                if (shifts.Rows.Count != 0)
                {
                    mess = string.Format("این روز دارای:" + "{0}" + "شیفت فعال است. آیا این روز تعطیل باشد؟", shifts.Rows.Count );

                    foreach (DataRow dr in shifts.Rows)
                        mess = mess + string.Format(" {0}:" + "از" + " {1} " + "تا" + " {2} ", dr["ShiftName"], dr["StartTime"], dr["EndTime"] + Environment.NewLine);
                    MessageFormResult r = MessageForm.Show(mess, "", MessageFormIcons.Question, MessageFormButtons.YesNo, color);
                    if (r == MessageFormResult.Yes)
                    {
                        SqlParameter[] pa;
                        pa = new SqlParameter[2];
                        int ind = 0;
                        pa[ind++] = new SqlParameter("@Month", datePicker.Value.FarsiSelectedDate.Split('/')[1]);
                        pa[ind++] = new SqlParameter("@Day", datePicker.Value.FarsiSelectedDate.Split('/')[2]);


                        da.ExecuteSP("SetHolidays", pa);
                    }
                }
                else
                {
                    MessageFormResult r = MessageForm.Show(mes, "", MessageFormIcons.Question, MessageFormButtons.YesNo, color);
                    if (r == MessageFormResult.Yes)
                    {
                        SqlParameter[] pa;
                        pa = new SqlParameter[2];
                        int ind = 0;
                        pa[ind++] = new SqlParameter("@Month", datePicker.Value.FarsiSelectedDate.Split('/')[1]);
                        pa[ind++] = new SqlParameter("@Day", datePicker.Value.FarsiSelectedDate.Split('/')[2]);


                        da.ExecuteSP("DelHolidays", pa);
                    }
                }
            }
            else
            {
                var notH = string.Format("روز:" + "{0}" +
                                " {1}",

                            //   e.NewFarsiDate + Environment.NewLine,

                               datePicker.Value.FarsiSelectedDate + Environment.NewLine,
                    //  datePicker.Value.GregorianSelectedDate.ToShortDateString() + Environment.NewLine,
                    //datePicker.Value.NumberOfDaysInFarsiSelectedMonth + Environment.NewLine,
                    //FarsiDateHelper.GetLongFarsiDate(datePicker.Value.GregorianSelectedDate) + Environment.NewLine,
                              IsHoliday ? "این روز تعطیل است. آیا غیر تعطیل باشد؟" : "این روز غیرتعطیل است. آیا تعطیل باشد؟");
                MessageFormResult r = MessageForm.Show(notH, "", MessageFormIcons.Question, MessageFormButtons.YesNo, color);
                if (r == MessageFormResult.Yes)
                {
                    SqlParameter[] par;
                    par = new SqlParameter[2];
                    int ind = 0;
                    par[ind++] = new SqlParameter("@Month", datePicker.Value.FarsiSelectedDate.Split('/')[1]);
                    par[ind++] = new SqlParameter("@Day", datePicker.Value.FarsiSelectedDate.Split('/')[2]);


                    da.ExecuteSP("DelHolidays", par);
                }
            }
             
        }

        private void farsiCalendar1_DockChanged(object sender, EventArgs e)
        {

        }

        
    }
}
